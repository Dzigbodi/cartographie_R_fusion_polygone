knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(tidyverse)
shape_file<-"tgo_admbndl_admALL_inseed_itos_20210107.shp"
sf_df<-read_sf(shape_file)
shape_file<-"tgo_admbnda_adm3_inseed_20210107.shp"
sf_df<-read_sf(shape_file)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(tidyverse)
shape_file<-"tgo_admbnda_adm3_inseed_20210107.shp"
sf_df<-read_sf(shape_file)
library(sf)
library(sf)
library(tidyverse)
shape_file<-"tgo_admbnda_adm3_inseed_20210107.shp"
sf_df<-read_sf(shape_file)
library(sf)
library(tidyverse)
shape_file<-"./Shapefiles/tgo_admbnda_adm3_inseed_20210107.shp"
sf_df<-read_sf(shape_file)
View(sf_df)
shape_file<-"./Shapefiles/tgo_admbnda_adm3_inseed_20210107.shp"
sf_df<-read_sf(shape_file)
plot(sf_df)
p<-ggplot(data=sf_df)+
geom_sf(aes(fill=ADM1_FR))+
theme_minimal()
p
p<-ggplot(data=sf_df)+
geom_sf(aes(fill=ADM1_FR))+
labs(fill="Region")+
theme_minimal()
p
p<-ggplot(data=sf_df)+
geom_sf(aes(fill=ADM1_FR))+
labs(fill="Région")+
theme_minimal()
p
head(sf_df)
str(sf_df)
sf_region_df<-sf_df|>
group_by(ADM1_FR)|>
summarise(geometry=st_union(geometry))
sf_region_df<-sf_df|>
group_by(ADM1_FR)|>
summarise(geometry=st_union(geometry))
head(sf_region_df)
p<-ggplot(data=sf_region_df)+
geom_sf(aes(fill=ADM1_FR))+
labs(fill="Région")+
theme_minimal()
p
View(sf_df)
View(sf_df)
shape_file<-"./Shapefiles/tgo_admbndl_admALL_inseed_itos_20210107.shp"
sf_df<-read_sf(shape_file)
plot(sf_df)
View(sf_df)
shape_file<-"./Shapefiles/tgo_admbnda_adm3_inseed_20210107.shp"
sf_df<-read_sf(shape_file)
plot(sf_df)
isole_lieu<-"Lome Commune"
sf_df_iso<-sf_df|>mutate(ADM1_FR_I=case_match(ADM2_FR,
isole_lieu~isole_lieu,
.default = ADM1_FR))
View(sf_df_iso)
isole_lieu<-"Lome Commune"
sf_df_iso<-sf_df|>mutate(ADM1_FR_I=case_match(ADM2_FR,
isole_lieu~isole_lieu,
.default = ADM1_FR))|>
group_by(ADM1_FR_I)|>
summarise(geometry=st_union(geometry))
shape_fileg<-"./Shapefiles/tgo_admbndl_admALL_inseed_itos_20210107.shp"
sf_dfg<-read_sf(shape_file)
View(sf_dfg)
sf_dfg<-read_sf(shape_fileg)
View(sf_dfg)
isole_lieu<-"Lome Commune"
sf_df_iso<-sf_df|>mutate(ADM1_FR_I=case_match(ADM2_FR,
isole_lieu~isole_lieu,
.default = ADM1_FR))|>
group_by(ADM1_FR_I)|>
summarise(geometry=st_union(geometry))
sf_df_iso
head(sf_df_iso)
head(sf_df_iso$ADM1_FR_I)
Incidence_Pauvrete<-data.frame(region=c("Centrale",     "Kara" ,        "Lome Commune", "Maritime",     "Plateaux" ,    "Savanes"  ), Incidence=c(76.0,68.9,27.0,45.3,65.9,87.3))
View(Incidence_Pauvrete)
library(openxlsx)
niger_file<-"https://data.humdata.org/dataset/8d2bb402-bd76-489e-948c-02564b8cffab/resource/32d3e0f0-b6ba-41de-9d01-3ab0c28c2bf6/download/niger_hrp_political_violence_events_and_fatalities_by_month-year_as-of-01feb2024.xlsx"
df_niger<-read.xlsx(niger_file)
df_niger<-read.xlsx(niger_file, sheet = "Data")
View(df_niger)
nigeria_file<-"https://data.humdata.org/dataset/a58fc2b9-3079-47f9-9755-47e7a1f77d19/resource/425bbb8f-5ca8-426b-bbb5-083eb59474ea/download/nigeria_hrp_political_violence_events_and_fatalities_by_month-year_as-of-01feb2024.xlsx"
df_niger<-read.xlsx(niger_file, sheet = "Data")
df_nigeria<-read.xlsx(nigeria_file, sheet = "Data")
View(df_nigeria)
mali_file<-"https://data.humdata.org/dataset/30806e5d-18ea-43ff-ba0c-2c897cc5662b/resource/1886e483-23ab-4bef-b2b5-5aaa8264e651/download/mali_hrp_political_violence_events_and_fatalities_by_month-year_as-of-01feb2024.xlsx"
df_niger<-read.xlsx(niger_file, sheet = "Data")
df_nigeria<-read.xlsx(nigeria_file, sheet = "Data")
df_mali<-read.xlsx(mali_file, sheet = "Data")
View(df_mali)
View(df_niger)
burkina_file<-"https://data.humdata.org/dataset/697d684e-54b7-4432-80a6-2cbc38da0f03/resource/fc9e2ac7-8871-4377-aae5-2edd606dfa08/download/burkina-faso_hrp_political_violence_events_and_fatalities_by_month-year_as-of-01feb2024.xlsx"
df_niger<-read.xlsx(niger_file, sheet = "Data")
df_nigeria<-read.xlsx(nigeria_file, sheet = "Data")
df_mali<-read.xlsx(mali_file, sheet = "Data")
df_burkina<-read.xlsx(burkina_file, sheet = "Data")
View(df_burkina)
library(shiny)
library(plotly)
ui <- fluidPage(
radioButtons("plotType", "Plot Type:", choices = c("ggplotly", "plotly")),
plotlyOutput("plot"),
verbatimTextOutput("hover"),
verbatimTextOutput("click"),
verbatimTextOutput("brushing"),
verbatimTextOutput("selecting"),
verbatimTextOutput("brushed"),
verbatimTextOutput("selected")
)
server <- function(input, output, session) {
nms <- row.names(mtcars)
output$plot <- renderPlotly({
p <- if (identical(input$plotType, "ggplotly")) {
ggplotly(ggplot(mtcars, aes(x = mpg, y = wt, customdata = nms)) + geom_point())
} else {
plot_ly(mtcars, x = ~mpg, y = ~wt, customdata = nms)
}
p %>%
layout(dragmode = "select") %>%
event_register("plotly_selecting")
})
output$hover <- renderPrint({
d <- event_data("plotly_hover")
if (is.null(d)) "Hover events appear here (unhover to clear)" else d
})
output$click <- renderPrint({
d <- event_data("plotly_click")
if (is.null(d)) "Click events appear here (double-click to clear)" else d
})
output$brushing <- renderPrint({
d <- event_data("plotly_brushing")
if (is.null(d)) "Brush extents appear here (double-click to clear)" else d
})
output$selecting <- renderPrint({
d <- event_data("plotly_selecting")
if (is.null(d)) "Brush points appear here (double-click to clear)" else d
})
output$brushed <- renderPrint({
d <- event_data("plotly_brushed")
if (is.null(d)) "Brush extents appear here (double-click to clear)" else d
})
output$selected <- renderPrint({
d <- event_data("plotly_selected")
if (is.null(d)) "Brushed points appear here (double-click to clear)" else d
})
}
shinyApp(ui, server, options = list(display.mode = "showcase"))
library(shiny)
library(plotly)
library(shinyBS)
install.packages("shinyBS")
library(shiny)
library(plotly)
library(shinyBS)
df1 <- data.frame(x = 1:10, y = 1:10)
df2 <- data.frame(x = c(rep('a', 10), rep('b', 10)),
y = c(rnorm(10), rnorm(10, 3, 1)))
ui <- fluidPage(
column(6, plotlyOutput('scatter'))
)
server <- function(input, output, session) {
output$scatter <- renderPlotly({
plot_ly(df1, x = x, y = y, mode = 'markers',
type = 'scatter', source = 'scatter')
})
observeEvent(event_data("plotly_click", source = "scatter"), {
showModal(modalDialog(
renderPlotly({
plot_ly(df2, x = x, y = y, type = 'box')
}),
easyClose = TRUE
))
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(plotly)
library(shinyBS)
df1 <- data.frame(x = 1:10, y = 1:10)
df2 <- data.frame(x = c(rep('a', 10), rep('b', 10)),
y = c(rnorm(10), rnorm(10, 3, 1)))
ui <- fluidPage(
column(6, plotlyOutput('scatter'))
)
server <- function(input, output, session) {
output$scatter <- renderPlotly({
plot_ly(df1, x = x, y = y, mode = 'markers',
type = 'scatter', source = 'scatter')
})
observeEvent(event_data("plotly_click", source = "scatter"), {
showModal(modalDialog(
renderPlotly({
plot_ly(df2, x = x, y = y, type = 'box')
}),
easyClose = TRUE
))
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(plotly)
library(shinyBS)
df1 <- data.frame(x = 1:10, y = 1:10)
df2 <- data.frame(x = c(rep('a', 10), rep('b', 10)),
y = c(rnorm(10), rnorm(10, 3, 1)))
ui <- fluidPage(
column(6, plotlyOutput('scatter'))
)
server <- function(input, output, session) {
output$scatter <- renderPlotly({
plot_ly(df1, x =~x, y =~y, mode = 'markers',
type = 'scatter', source = 'scatter')
})
observeEvent(event_data("plotly_click", source = "scatter"), {
showModal(modalDialog(
renderPlotly({
plot_ly(df2, x =~ x, y =~ y, type = 'box')
}),
easyClose = TRUE
))
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(plotly)
library(shinyBS)
df1 <- data.frame(x = 1:10, y = 1:10)
df2 <- data.frame(x = c(rep('a', 10), rep('b', 10)),
y = c(rnorm(10), rnorm(10, 3, 1)))
ui <- fluidPage(
column(6, plotlyOutput('scatter'))
)
server <- function(input, output, session) {
output$scatter <- renderPlotly({
plot_ly(df1, x =~x, y =~y, mode = 'markers',
type = 'scatter', source = 'scatter')
})
observeEvent(event_data("plotly_click", source = "scatter"),{
d<-event_data("plotly_click", source = "scatter")
print(d)
})
}
shinyApp(ui = ui, server = server)
runApp('C:/Users/amegb/Documents/shinytips/plotly.R')
runApp('C:/Users/amegb/Documents/shinytips/plotly.R')
runApp('C:/Users/amegb/Documents/shinytips/observevents.R')
